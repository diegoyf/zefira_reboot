{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"reset",
				"resetPasswordUrl"
			],
			[
				"shol",
				"should_not"
			],
			[
				"ed",
				"end"
			],
			[
				"shou",
				"should_not"
			],
			[
				"user",
				"user_path"
			],
			[
				"sign",
				"sign_in"
			],
			[
				"dee",
				"delete"
			],
			[
				"fill",
				"fill_in"
			],
			[
				"un",
				"unless	unless â€¦ end"
			],
			[
				"shu",
				"should"
			],
			[
				"cli",
				"click_link"
			],
			[
				"should",
				"should_not"
			],
			[
				"have",
				"have_link"
			],
			[
				"hav",
				"have_link"
			],
			[
				"fil",
				"fill_in"
			],
			[
				"sig",
				"signup_path"
			],
			[
				"ue",
				"user"
			],
			[
				"pas",
				"password_confirmation"
			],
			[
				"passwo",
				"password_confirmation"
			],
			[
				"pass",
				"password"
			],
			[
				"sh",
				"should"
			],
			[
				"passw",
				"password_confirmation"
			],
			[
				"be",
				"be_valid"
			],
			[
				"shul",
				"should_not"
			],
			[
				"sho",
				"should_not"
			],
			[
				"lin",
				"link_to"
			],
			[
				"infe",
				"infer_base_class_for_anonymous_controllers"
			],
			[
				"fix",
				"fixture_path"
			],
			[
				"rspec",
				"rspec"
			],
			[
				"moc",
				"mock_with"
			],
			[
				"R",
				"RSpec"
			],
			[
				"conf",
				"config"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "\"\"\"Zefira application v1.0 \"\"\"\n\nimport tornado.httpserver\nimport tornado.web\nimport tornado.ioloop\nimport tornado.options\nimport tornado.gen\nimport os.path\nimport datetime\nimport uimodules\nimport requesthandlers\nimport logging\n\n\nfrom tornado.options import define, options\nfrom datamanag import DataManagement\nfrom activity import ActivityMixin\n\ndefine(\"port\", default = 8000, help= \"run on given port\", type=int)\n\n\"\"\"*************************************************************************\nApplication: Clase principal que inicializa los handlers e inicia la conexion \ncon la base de datos. Ademas, asigna los modulosUI, los paths para los archivos\nestaticos, templates, y otras settings de seguridad y cookies.\n\n************************************************************************\"\"\"\n\n\nclass Application(tornado.web.Application):\n    def __init__(self):\n        handlers = [\n            (r\"/\", requesthandlers.MainHandler),\n            (r\"/personas\", requesthandlers.PersonasHandler),\n            (r\"/empresas\", requesthandlers.EmpresasHandler),\n            (r\"/login\", LoginHandler),\n            (r\"/logout\", LogoutHandler),\n            (r\"/signup\", SignUpHandler),\n            (r\"/box\", BoxHandler),\n            (r\"/cbox\", CBoxHandler),\n            (r\"/publish\", PublishBenefitHandler),\n            (r\"/activity\", ActivityHandler),\n            (r\"/reserve\", ReserveHandler),\n            (r\"/validate\", ValidationHandler),\n            (r\"/companies\", BrandsHandler),\n            (r\"/follow\", FollowHandler),\n            (r\"/api/test\", ApiHandler)\n           \n            #(r\"/error\", requesthandlers.ErrorHandler)\n            ]\n        settings = dict(\n            template_path = os.path.join(os.path.dirname(__file__), \"templates\"),\n            static_path = os.path.join(os.path.dirname(__file__),\"static\"),\n            ui_modules={\n                \"Benefit\" : uimodules.BenefitModule,\n                \"BenefitCo\": uimodules.BenefitCoModule,\n                \"Company\" : uimodules.CompanyModule,  \n             } ,         \n            debug = True,\n            cookie_secret = \"0azgrztWSuenSRWevq9GAOp/4bDtSET0q8YII0ZfLDc=\",\n            login_url = \"/login\",\n            xsrf_cookies = True,\n            autoescape = None,\n        )\n        \n        self.dataManager = DataManagement(\"zefira\")\n        self.ActivityMix = ActivityMixin() \n        tornado.web.Application.__init__(self, handlers, **settings)\n\n\"\"\" Clase base de toda la autenticacion de la pagina. \"\"\"\n\nclass BaseHandler(tornado.web.RequestHandler):\n    \n    #Decorador que retorna una instancia de la clase administrador\n    #para ser utilizada por la aplicacion\n    @property\n    def data_manager(self):\n        return self.application.dataManager\n    @property\n\n    def activitymix(self):\n        return self.application.ActivityMix\n\n    #Funcion que utiliza los parametros seguros de LoginHandler para\n    #llamar el usuario y retornar una array con su informacion\n    def get_current_user(self):\n        user_id  = self.get_secure_cookie(\"email\")\n        password = self.get_secure_cookie(\"password\")\n        branch = self.get_secure_cookie(\"branch\")\n        \n        user = self.application.dataManager.fetch_user(user_id, password, branch)\n        if user:\n            return user\n        else:\n            self.set_status(404)\n\n\n\"\"\" Clase que maneja el ingreso a la pagina \"\"\"\n\nclass LoginHandler(BaseHandler):\n    def get(self):\n        self.render(\"login.html\",\n                    page_title =\"Zefira | Login\",\n                    header_text= \"Ingresa a Zefira\",  \n                    )\n    def post(self):\n\n        \n        self.set_secure_cookie(\"email\", self.get_argument(\"email\"))\n        self.set_secure_cookie(\"password\", self.get_argument(\"password\"))\n        self.set_secure_cookie(\"branch\", self.get_argument(\"branch\"))\n        if self.get_argument(\"branch\") == \"companies\":\n            self.redirect(\"/cbox\")\n        else:\n            self.redirect(\"/box\")\n\n\"\"\" Clase que se encarga del borrado de cookies y la salida de \nla aplicacion \"\"\"\n\nclass LogoutHandler(BaseHandler):\n    def get(self):\n        \n        self.clear_cookie(\"email\")\n        self.clear_cookie(\"password\")\n        self.clear_cookie(\"branch\")\n        self.redirect(\"/\")\n\n\"\"\" Clase que se encarga de la creacion de usuarios\nTipo Request: POST\"\"\"\nclass SignUpHandler(BaseHandler):\n    def post(self):\n\n        branch = self.get_argument(\"branch\")\n        self.set_secure_cookie(\"email\", self.get_argument(\"email\"))\n        self.set_secure_cookie(\"password\", self.get_argument(\"password\"))\n        self.set_secure_cookie(\"branch\", self.get_argument(\"branch\"))\n        self.redirect(self.data_manager.create_user(branch,self.request.arguments))\n\n\"\"\"Clase que maneja la presentacion del layout principal de \n la aplicacion en el area de los clientes Tipo Request: GET\"\"\"       \n\n\nclass BoxHandler(BaseHandler):\n\n    def get(self):\n        interests = self.current_user['interests']\n\n        benefits = self.data_manager.fetch_benefits_usr(interests, self.current_user)\n        \n        self.render(\n                \"box.html\",\n                page_title = \"Zefira | Inicio\",\n                header_text = \"Box\",\n                benefits = benefits,\n                )\n\n\"\"\"Clase que maneja la presentacion del layout principal de \nla aplicacion en el area de las empresas \"\"\"\n\nclass CBoxHandler(BaseHandler):\n    def get(self):\n        benefits_published = self.current_user['benefits']\n        \n        \n        if len(benefits_published) == 0 or benefits_published == None : \n            benefits_deref = None\n        else:\n\n            benefits_deref = self.data_manager.fetch_benefits_cmp(\n                benefits_published)\n\n            \n              \n\n        self.render(\n            \"cbox.html\",\n            page_title = \"Zefira | Company Box\",\n            benefits = benefits_deref,\n            company_id = self.current_user['_id']\n            )\n\n\n\"\"\"Handler que administra la publicacion de beneficios\"\"\"\n\nclass PublishBenefitHandler(BaseHandler):\n    def post(self):\n        if self.data_manager.publish_benefit(self.request.arguments, \n            self.current_user):\n            self.redirect(\"/cbox\")\n        else:\n            self.redirect(\"/error\")\n\n\nclass ReserveHandler(BaseHandler):\n    @tornado.web.asynchronous\n    def post(self):\n       \n        action = self.request.arguments['action'][0]\n        company_id = self.request.arguments['company_id'][0]\n        benefit_id = self.request.arguments['benefit_id'][0]\n        self.activitymix.update_queue(benefit_id,company_id)\n\n\n\"\"\"Clase que maneja las respuestas  de la actividad de una empresa\"\"\"  \n\nclass ActivityHandler(BaseHandler):\n    @tornado.web.asynchronous\n    def get(self):\n        import json\n        cursor = 0\n        company = self.get_argument(\"company_id\")\n        self.activitymix.fetch_queue(self.on_updates,company)\n        \n            \n    def on_updates(self, data, confirm_id, company_id) :\n        if self.request.connection.stream.closed():\n            return\n        if confirm_id == company_id:    \n            self.finish(data)   \n        \n        else:\n            pass\n\n\"\"\"Clase que maneja la validacion de usuarios y correos\"\"\"\n\nclass ValidationHandler(BaseHandler):\n    def post(self):\n        branch = self.get_argument(\"branch\")\n        response = self.data_manager.validate_email(self.get_argument(\"email\"), branch)\n        logging.info(response)\n        self.write(str(response))\n\nclass BrandsHandler(BaseHandler):\n    def get(self):\n        interests = self.current_user['interests']\n        companies = self.data_manager.fetch_companies(interests)\n        self.render(\n            \"copres.html\",\n            page_title = \"Zefira | Lista Marcas\",\n            companies = companies\n            )\nclass FollowHandler(BaseHandler):\n    @tornado.web.asynchronous\n    def post(self):\n        import json\n        company_id = self.get_argument(\"company_id\")\n        action = self.get_argument(\"action\")\n        self.data_manager.update_follow(company_id, \n            self.current_user ,action, self.on_response)\n        \n\n    def on_response(self):\n        if self.request.connection.stream.closed():\n            return\n            \n        self.finish()    \n        \nclass ApiHandler(tornado.web.RequestHandler):\n    def get(self):\n        import json\n        from tornado.escape import json_encode\n        doc = {\n        \"products\": [\n        {\n            \"pid\": \"1\",\n            \"name\": \"iPhone 4S\",\n            \"price\": \"300.00\",\n            \"created_at\": \"2012-04-29 02:04:02\",\n            \"updated_at\": \"0000-00-00 00:00:00\"\n        },\n        {\n            \"pid\": \"2\",\n            \"name\": \"Macbook Pro\",\n            \"price\": \"600.00\",\n            \"created_at\": \"2012-04-29 02:04:51\",\n            \"updated_at\": \"0000-00-00 00:00:00\"\n        },\n        {\n            \"pid\": \"3\",\n            \"name\": \"Macbook Air\",\n            \"price\": \"800.00\",\n            \"created_at\": \"2012-04-29 02:05:57\",\n            \"updated_at\": \"0000-00-00 00:00:00\"\n        },\n        {\n            \"pid\": \"4\",\n            \"name\": \"OS X Lion\",\n            \"price\": \"100.00\",\n            \"created_at\": \"2012-04-29 02:07:14\",\n            \"updated_at\": \"0000-00-00 00:00:00\"\n        }\n        ],\n    \"success\": 1\n    }\n        \n        self.write(json_encode(doc))\n\n\"\"\"Funcion principal que levanta la aplicacion \"\"\"\n\ndef main():\n    tornado.options.parse_command_line()\n    server = tornado.httpserver.HTTPServer(Application())\n    server.listen(options.port)\n    tornado.ioloop.IOLoop.instance().start()\n\nif __name__ == \"__main__\":\n    main()\n\n",
			"file": "main.py",
			"file_size": 9588,
			"file_write_time": 1369322032000000,
			"settings":
			{
				"buffer_size": 9592,
				"line_ending": "Unix"
			}
		},
		{
			"file": "templates/box.html",
			"settings":
			{
				"buffer_size": 2477,
				"line_ending": "Unix"
			}
		},
		{
			"file": "datamanag.py",
			"settings":
			{
				"buffer_size": 7023,
				"line_ending": "Unix"
			}
		},
		{
			"file": "templates/signupcomp.html",
			"settings":
			{
				"buffer_size": 669,
				"line_ending": "Unix"
			}
		},
		{
			"file": "uimodules.py",
			"settings":
			{
				"buffer_size": 485,
				"line_ending": "Unix"
			}
		},
		{
			"file": "templates/modules/company.html",
			"settings":
			{
				"buffer_size": 370,
				"line_ending": "Unix"
			}
		},
		{
			"file": "static/test.js",
			"settings":
			{
				"buffer_size": 10870,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "// Copyright 2009 FriendFeed\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you may\n// not use this file except in compliance with the License. You may obtain\n// a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n// License for the specific language governing permissions and limitations\n// under the License.\n\n$(document).ready(function() {\n    if (!window.console) window.console = {};\n    if (!window.console.log) window.console.log = function() {};\n\n    $(\"#messageform\").live(\"submit\", function() {\n        newMessage($(this));\n        return false;\n    });\n    $(\"#messageform\").live(\"keypress\", function(e) {\n        if (e.keyCode == 13) {\n            newMessage($(this));\n            return false;\n        }\n    });\n    $(\"#message\").select();\n    updater.poll();\n});\n\nfunction newMessage(form) {\n    var message = form.formToDict();\n    var disabled = form.find(\"input[type=submit]\");\n    disabled.disable();\n    $.postJSON(\"/a/message/new\", message, function(response) {\n        updater.showMessage(response);\n        if (message.id) {\n            form.parent().remove();\n        } else {\n            form.find(\"input[type=text]\").val(\"\").select();\n            disabled.enable();\n        }\n    });\n}\n\nfunction getCookie(name) {\n    var r = document.cookie.match(\"\\\\b\" + name + \"=([^;]*)\\\\b\");\n    return r ? r[1] : undefined;\n}\n\njQuery.postJSON = function(url, args, callback) {\n    args._xsrf = getCookie(\"_xsrf\");\n    $.ajax({url: url, data: $.param(args), dataType: \"text\", type: \"POST\",\n            success: function(response) {\n        if (callback) callback(eval(\"(\" + response + \")\"));\n    }, error: function(response) {\n        console.log(\"ERROR:\", response)\n    }});\n};\n\njQuery.fn.formToDict = function() {\n    var fields = this.serializeArray();\n    var json = {}\n    for (var i = 0; i < fields.length; i++) {\n        json[fields[i].name] = fields[i].value;\n    }\n    if (json.next) delete json.next;\n    return json;\n};\n\njQuery.fn.disable = function() {\n    this.enable(false);\n    return this;\n};\n\njQuery.fn.enable = function(opt_enable) {\n    if (arguments.length && !opt_enable) {\n        this.attr(\"disabled\", \"disabled\");\n    } else {\n        this.removeAttr(\"disabled\");\n    }\n    return this;\n};\n\nvar updater = {\n    errorSleepTime: 500,\n    cursor: null,\n\n    poll: function() {\n        var args = {\"_xsrf\": getCookie(\"_xsrf\")};\n        if (updater.cursor) args.cursor = updater.cursor;\n        $.ajax({url: \"/a/message/updates\", type: \"POST\", dataType: \"text\",\n                data: $.param(args), success: updater.onSuccess,\n                error: updater.onError});\n    },\n\n    onSuccess: function(response) {\n        try {\n            updater.newMessages(eval(\"(\" + response + \")\"));\n        } catch (e) {\n            updater.onError();\n            return;\n        }\n        updater.errorSleepTime = 500;\n        window.setTimeout\n        window.setTimeout(updater.poll, 0);\n    },\n\n    onError: function(response) {\n        updater.errorSleepTime *= 2;\n        console.log(\"Poll error; sleeping for\", updater.errorSleepTime, \"ms\");\n        window.setTimeout(updater.poll, updater.errorSleepTime);\n    },\n\n    newMessages: function(response) {\n        if (!response.messages) return;\n        updater.cursor = response.cursor;\n        var messages = response.messages;\n        updater.cursor = messages[messages.length - 1].id;\n        console.log(messages.length, \"new messages, cursor:\", updater.cursor);\n        for (var i = 0; i < messages.length; i++) {\n            updater.showMessage(messages[i]);\n        }\n    },\n\n    showMessage: function(message) {\n        var existing = $(\"#m\" + message.id);\n        if (existing.length > 0) return;\n        var node = $(message.html);\n        node.hide();\n        $(\"#inbox\").append(node);\n        node.slideDown();\n    }\n};\n",
			"file": "/home/diego/Desktop/demos/chat/static/chat.js",
			"file_size": 4056,
			"file_write_time": 1361742636000000,
			"settings":
			{
				"buffer_size": 4082,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/diego/Desktop/demos/chat/chatdemo.py",
			"settings":
			{
				"buffer_size": 5083,
				"line_ending": "Unix"
			}
		},
		{
			"file": "templates/main.html",
			"settings":
			{
				"buffer_size": 753,
				"line_ending": "Unix"
			}
		},
		{
			"file": "static/test.css",
			"settings":
			{
				"buffer_size": 1065,
				"line_ending": "Unix"
			}
		},
		{
			"file": "templates/copres.html",
			"settings":
			{
				"buffer_size": 1393,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
		],
		"width": 450.0
	},
	"console":
	{
		"height": 139.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/diego/zefiratest/zefira3/templates/empresas.html",
		"/home/diego/zefiratest/zefira3/templates/signupcl.html",
		"/home/diego/zefiratest/zefira3/templates/signupcomp.html",
		"/home/diego/zefiratest/zefira3/templates/clientes.html",
		"/home/diego/zefiratest/zefira3/activity.py",
		"/home/diego/zefiratest/zefira3/static/test.js",
		"/home/diego/zefiratest/zefira2/uimodules.py",
		"/home/diego/zefiratest/zefira2/templates/main.html",
		"/home/diego/zefiratest/zefira2/templates/deploy.html",
		"/home/diego/zefiratest/zefira2/requesthandlers.py",
		"/home/diego/zefiratest/zefira2/templates/box.html",
		"/home/diego/zefiratest/zefira2/static/test.css",
		"/home/diego/zefiratest/zefira2/templates/handle.html",
		"/home/diego/zefiratest/zefira2/templates/modules/benefitco.html",
		"/home/diego/zefiratest/zefira2/templates/signupcomp.html",
		"/home/diego/zefiratest/zefira2/templates/publish.html",
		"/home/diego/zefiratest/zefira2/templates/empresas.html",
		"/home/diego/zefiratest/zefira2/templates/handle2.html",
		"/home/diego/zefiratest/zefira2/templates/signupcl.html",
		"/home/diego/zefiratest/zefira1/uimodules.py",
		"/home/diego/zefiratest/zefira2/templates/logincl.html",
		"/home/diego/zefiratest/zefira2/templates/clientes.html",
		"/home/diego/zefiratest/zefira2/templates/index.html",
		"/home/diego/zefiratest/zefira2/.gitignore",
		"/home/diego/zefiratest/zefira1/.gitignore",
		"/home/diego/zefiratest/zefira1/.gitignore~",
		"/home/diego/zefiratest/zefira2/templates/handle2.hmtl~",
		"/home/diego/zefiratest/zefira2/templates/modules/benefit.html",
		"/home/diego/zefiratest/zefira2/datamanag.py",
		"/home/diego/zefiratest/zefira1/templates/index.html",
		"/home/diego/zefiratest/zefira1/admin.py",
		"/home/diego/zefiratest/zefira1/templates/main.html",
		"/home/diego/zefiratest/zefira1/templates/box.html",
		"/home/diego/zefiratest/zefira1/static/test.css",
		"/home/diego/zefiratest/zefira1/main.py",
		"/home/diego/zefiratest/zefira1/templates/handle2.html",
		"/home/diego/zefiratest/zefira1/templates/handle.html",
		"/home/diego/zefiratest/zefira1/templates/cbox.html",
		"/home/diego/zefiratest/zefira1/templates/modules/benefit.html",
		"/home/diego/zefiratest/zefira1/templates/handle2.hmtl",
		"/home/diego/Desktop/Tabs-Pills-BEGIN/tabs-pills.html",
		"/home/diego/rails/sample_app/app/views/layouts/_header.html.erb",
		"/home/diego/rails/sample_app/app/views/layouts/application.html.erb",
		"/home/diego/zefiratest/zefira1/templates/snipp",
		"/home/diego/zefiratest/zefira1/templates/empresas.html",
		"/home/diego/zefiratest/zefira1/templates/signupcomp.html",
		"/home/diego/zefiratest/zefira1/templates/signupcl.html",
		"/home/diego/zefiratest/zefira1/templates/clientes.html",
		"/home/diego/rails/sample_app/app/assets/javascripts/application.js",
		"/home/diego/zefiratest/zefira1/static/test.js",
		"/home/diego/rails/sample_app/app/views/static_pages/home.html.erb",
		"/home/diego/zefira2/templates/main.html",
		"/home/diego/zefira2/main.py",
		"/home/diego/zefira2/data_manag.py",
		"/home/diego/zefira2/templates/empresas.html",
		"/home/diego/zefira2/requesthandlers.py",
		"/home/diego/zefira2/templates/logincomp.html",
		"/home/diego/zefira2/templates/index.html",
		"/home/diego/zefira2/templates/signupcl.html",
		"/home/diego/zefira2/templates/clientes.html",
		"/home/diego/zefira2/templates/logincl.html",
		"/home/diego/zefira1/admin.py",
		"/home/diego/zefira1/data_manag.py",
		"/home/diego/zefira2/models.py",
		"/home/diego/zefira1/main.py",
		"/home/diego/zefira/data_manag.py",
		"/home/diego/zefira/main.py",
		"/home/diego/zefira2/handlers.py",
		"/home/diego/nodetest/node_app/app.js",
		"/home/diego/nodetest/node_app/models/Account.js",
		"/home/diego/nodetest/node_app/public/js/router.js",
		"/home/diego/nodetest/node_app/public/js/SocialNet.js",
		"/home/diego/nodetest/node_app/public/js/views/login.js",
		"/home/diego/nodetest/node_app/public/js/views/register.js",
		"/home/diego/nodetest/node_app/public/js/views/index.js",
		"/home/diego/nodetest/node_app/public/templates/login.html",
		"/home/diego/nodetest/node_app/register.html",
		"/home/diego/.config/sublime-text-2/Packages/Default/Preferences.sublime-settings",
		"/home/diego/.config/sublime-text-2/Packages/User/Preferences.sublime-settings",
		"/home/diego/nodetest/node_app/public/js/boot.js",
		"/home/diego/nodetest/node_app/views/index.jade",
		"/home/diego/nodetest/node_app/package.json",
		"/home/diego/nodetest/node_app/views/stooges.jade",
		"/home/diego/nodetest/node_app/packages.json",
		"/home/diego/rails/sample_app/app/models/user.rb",
		"/home/diego/rails/sample_app/spec/models/user_spec.rb",
		"/home/diego/rails/sample_app/app/models/micropost.rb",
		"/home/diego/rails/sample_app/spec/models/micropost_spec.rb",
		"/home/diego/rails/sample_app/db/migrate/20130427015232_create_microposts.rb",
		"/home/diego/rails/sample_app/app/views/users/_user.html.erb",
		"/home/diego/rails/sample_app/spec/requests/user_pages_spec.rb",
		"/home/diego/rails/sample_app/spec/factories.rb",
		"/home/diego/rails/sample_app/spec/requests/authentication_pages_spec.rb",
		"/home/diego/rails/sample_app/app/controllers/users_controller.rb",
		"/home/diego/rails/sample_app/lib/tasks/sample_data.rake",
		"/home/diego/rails/sample_app/db/migrate/20130425050011_add_admin_to_users.rb",
		"/home/diego/rails/sample_app/app/views/users/index.html.erb",
		"/home/diego/rails/sample_app/app/assets/stylesheets/static_pages.css.scss",
		"/home/diego/rails/sample_app/Gemfile",
		"/home/diego/rails/sample_app/app/helpers/users_helper.rb",
		"/home/diego/rails/sample_app/app/views/users/show.html.erb",
		"/home/diego/rails/sample_app/app/helpers/sessions_helper.rb",
		"/home/diego/rails/sample_app/app/controllers/sessions_controller.rb",
		"/home/diego/rails/sample_app/spec/support/utilities.rb",
		"/home/diego/rails/sample_app/app/views/users/edit.html.erb",
		"/home/diego/rails/sample_app/db/migrate/20130424181850_add_remember_token_to_users.rb",
		"/home/diego/rails/sample_app/db/migrate/20130424180720_add_remember_token_to_users.rb",
		"/home/diego/rails/sample_app/app/controllers/application_controller.rb",
		"/home/diego/rails/sample_app/app/views/sessions/new.html.erb",
		"/home/diego/rails/sample_app/app/views/layouts/_footer.html.erb",
		"/home/diego/rails/sample_app/config/routes.rb",
		"/home/diego/rails/sample_app/config/locales/en.yml",
		"/home/diego/rails/sample_app/config/environments/production.rb",
		"/home/diego/rails/sample_app/app/views/shared/_error_messages.html.erb",
		"/home/diego/rails/sample_app/app/views/users/new.html.erb",
		"/home/diego/rails/sample_app/config/environments/test.rb",
		"/home/diego/rails/sample_app/db/migrate/20130423041146_add_index_to_users_email.rb",
		"/home/diego/rails/sample_app/spec/requests/static_pages_spec.rb",
		"/home/diego/rails/sample_app/app/views/layouts/_shim.html.erb",
		"/home/diego/rails/sample_app/app/assets/stylesheets/custom.css.scss",
		"/home/diego/rails/sample_app/.gitignore",
		"/home/diego/rails/sample_app/example_user.rb",
		"/home/diego/rails/sample_app/spec/spec_helper.rb",
		"/home/diego/rails/sample_app/app/helpers/application_helper.rb",
		"/home/diego/rails/sample_app/config/database.yml",
		"/home/diego/.config/sublime-text-2/Packages/RubyTest/RubyTest.sublime-settings",
		"/home/diego/rails/sample_app/config/boot.rb",
		"/home/diego/rails/sample_app/app/controllers/static_pages_controller.rb"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"username",
			"user[username]",
			"type",
			";\">",
			"Empresas",
			"all",
			"{@",
			"diego",
			"yaml"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "main.py",
					"settings":
					{
						"buffer_size": 9592,
						"regions":
						{
						},
						"selection":
						[
							[
								9239,
								9239
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "templates/box.html",
					"settings":
					{
						"buffer_size": 2477,
						"regions":
						{
						},
						"selection":
						[
							[
								803,
								803
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "datamanag.py",
					"settings":
					{
						"buffer_size": 7023,
						"regions":
						{
						},
						"selection":
						[
							[
								6608,
								6608
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2808.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "templates/signupcomp.html",
					"settings":
					{
						"buffer_size": 669,
						"regions":
						{
						},
						"selection":
						[
							[
								460,
								460
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "uimodules.py",
					"settings":
					{
						"buffer_size": 485,
						"regions":
						{
						},
						"selection":
						[
							[
								485,
								485
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "templates/modules/company.html",
					"settings":
					{
						"buffer_size": 370,
						"regions":
						{
						},
						"selection":
						[
							[
								370,
								370
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 6,
					"file": "static/test.js",
					"settings":
					{
						"buffer_size": 10870,
						"regions":
						{
						},
						"selection":
						[
							[
								6358,
								6358
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2214.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/home/diego/Desktop/demos/chat/static/chat.js",
					"settings":
					{
						"buffer_size": 4082,
						"regions":
						{
						},
						"selection":
						[
							[
								3067,
								3067
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 975.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/home/diego/Desktop/demos/chat/chatdemo.py",
					"settings":
					{
						"buffer_size": 5083,
						"regions":
						{
						},
						"selection":
						[
							[
								962,
								962
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "templates/main.html",
					"settings":
					{
						"buffer_size": 753,
						"regions":
						{
						},
						"selection":
						[
							[
								493,
								493
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "static/test.css",
					"settings":
					{
						"buffer_size": 1065,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "templates/copres.html",
					"settings":
					{
						"buffer_size": 1393,
						"regions":
						{
						},
						"selection":
						[
							[
								830,
								830
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 390.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.482081911263,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 112.0
	},
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 153.0,
	"status_bar_visible": true
}
